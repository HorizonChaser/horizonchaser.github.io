name: Bulid-Sync

on: 
  push:
    branches:
      - backup

env:
  DEPLOY_REPO: HorizonChaser/horizonchaser.github.io
  DEPLOY_BRANCH: gh-pages

jobs:
  build-and-sync-and-send-nofiticiation:

    runs-on: ubuntu-latest
    steps:

    - name: Checkout source
      uses: actions/checkout@v2

    - name: Checkout deploy repo
      uses: actions/checkout@v2
      with:
        repository: ${{ env.DEPLOY_REPO }}
        ref: ${{ env.DEPLOY_BRANCH }}
        path: .deploy_git
        fetch-depth: 0

    - name: Use Node.js 14
      uses: actions/setup-node@v1
      with:
        node-version: '14'

    - name: Setup hexo env
      env:
        ACTION_DEPLOY_KEY: ${{ secrets.HEXO_DEPLOY_PRI }}
      run: |
        mkdir -p ~/.ssh/
        echo "$ACTION_DEPLOY_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        git config --global user.email "ahorizonchaser@gmail.com"
        git config --global user.name "HorizonChaser"
        npm install hexo-cli -g
        npm install
        npm install hexo-bilibili-bangumi --save

    - name: Hexo update bangumi and deploy
      run: |
        hexo clean
        hexo bangumi -u
        hexo d 
    
    - name: Sync to Gitee
      uses: wearerequired/git-mirror-action@master
      env:
          # 注意在 Settings->Secrets 配置 GITEE_RSA_PRIVATE_KEY
          SSH_PRIVATE_KEY: ${{ secrets.GITEE_RSA_PRIVATE_KEY }}
      with:
          # 注意替换为你的 GitHub 源仓库地址
          source-repo: "git@github.com:HorizonChaser/horizonchaser.github.io.git"
          # 注意替换为你的 Gitee 目标仓库地址
          destination-repo: "git@gitee.com:horizonchaser/horizonchaser.git"

    # No longer available since Gitee requires real-name registration and verification
    # - name: Build Gitee Pages
    #   uses: yanglbme/gitee-pages-action@master
    #   with:
    #       # 注意替换为你的 Gitee 用户名
    #       gitee-username: HorizonChaser
    #       # 注意在 Settings->Secrets 配置 GITEE_PASSWORD
    #       gitee-password: ${{ secrets.GITEE_PASSWORD }}
    #       # 注意替换为你的 Gitee 仓库
    #       gitee-repo: horizonchaser
    #       branch: gh-pages

    - name: Get commit message
      id: commit
      run: echo "::set-output name=commit_message::$(git log --format=%B -n 1 ${{ github.sha }})"
    
    - name: Check commit message
      id: check_message
      run: |
        if [[ "${{ steps.commit.outputs.commit_message }}" == *"upd post"* || " ${{ steps.commit.outputs.commit_message }}" == *"new post"* ]]; then
          echo "::set-output name=should_notify::true"
        else
          echo "::set-output name=should_notify::false"
        fi

    - uses: actions/setup-python@v5
      with:
        python-version: '3.10' 

    - name: Install Python libs
      run: pip install gitpython

    - name: Get new post title with Python
      if: steps.check_message.outputs.should_notify == 'true'
      id: py_article
      run: |
        python - <<EOF
        import os
        import git

        repo = git.Repo(os.getcwd())
        commit = repo.head.commit

        # Check if the latest commit includes an md file
        if any(f.endswith('.md') for f in commit.stats.files.keys()):
            # Get the title of the latest commit's MD file
            commit_files = commit.stats.files.keys()
            md_files = [f for f in commit_files if f.endswith('.md')]
            latest_md_file = md_files[-1]  # Assuming the latest MD file is the last one in the list
            title = latest_md_file.split('/')[-1].split('.md')[0]
            print("::set-output name=article_title::" + title)
            
        EOF

    - name: Get article details
      id: article
      run: |
        article_title=$(cat ./source/_posts/${{ steps.py_article.outputs.article_title }}.md |  grep -m 1 '^title: ' | cut -d ':' -f 2- | sed -e 's/^ *//' -e 's/ *$//')
        article_link=$(echo "https://horizonchaser.github.io/")
        
        echo "::set-output name=article_title::$article_title"
        echo "::set-output name=article_link::$article_link"

    - name: Send Telegram notification
      uses: appleboy/telegram-action@master
      if: steps.check_message.outputs.should_notify == 'true'
      with:
        to: ${{ secrets.TELEGRAM_CHANNEL_ID }}
        token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        message: "New article: ${{ steps.article.outputs.article_title }}\nLink: ${{ steps.article.outputs.article_link }}\n\nCommit message: ${{ steps.commit.outputs.commit_message }}"

  
